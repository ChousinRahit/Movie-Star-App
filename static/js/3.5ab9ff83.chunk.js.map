{"version":3,"sources":["img/no_pic_M.jpeg","img/no_pic_F.jpg","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/MovieInfo/cast.jsx","components/MovieInfo/index.jsx"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","Cast","profile_path","name","character","gender","imgSrc","id","IMAGE_BASE_URL","POSTER_SIZE","placeholderImageHeight","No_Pic_M","No_Pic_F","className","src","alt","MovieIfo","match","dispatch","useDispatch","useSelector","state","movies","movie","loading","credits","simiMovies","errors","error","console","log","useEffect","getMovie","params","movieId","getCredits","getSimilarMovies","window","scroll","clearError","genres","map","g","otherError","message","Loading","creditInfo","label","value","lang","original_language","vote_average","budget","Intl","NumberFormat","maximumSignificantDigits","format","revenue","release_date","status","Math","floor","runtime","title","original_title","Hero","heroMovie","tagline","people","key","each","random","getCreditInfo","mov"],"mappings":"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","file":"static/js/3.5ab9ff83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_pic_M.dbfd82ae.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/no_pic_F.ab6345ba.jpg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n// import NoImage from '../../img/noimages.png';\r\nimport No_Pic_M from '../../img/no_pic_M.jpeg';\r\nimport No_Pic_F from '../../img/no_pic_F.jpg';\r\n// import { genres } from '../../utils/genres';\r\n\r\nconst Cast = ({ profile_path, name, character, gender, id }) => {\r\n  let imgSrc = `${IMAGE_BASE_URL}${POSTER_SIZE}${profile_path}`;\r\n  let placeholderImageHeight = '';\r\n  if (!profile_path) {\r\n    placeholderImageHeight = 'placeholder-image-height';\r\n    if (gender === 2) {\r\n      imgSrc = No_Pic_M;\r\n    } else {\r\n      imgSrc = No_Pic_F;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"cast__wrapper\">\r\n      <img\r\n        className={`cast__img ${placeholderImageHeight}`}\r\n        src={imgSrc}\r\n        alt={name}\r\n      />\r\n      <div className=\"cast__name\">\r\n        <h2>{name}</h2>\r\n        {character && <p>as</p>}\r\n        <h3>{character}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport Hero from '../Hero';\r\nimport Loading from '../Loading';\r\nimport { lang } from '../../utils/langs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getMovie,\r\n  getCredits,\r\n  getSimilarMovies,\r\n  clearError,\r\n} from '../../store/actions';\r\nimport Cast from './cast';\r\nimport Movie from '../Movies/movie';\r\n\r\nconst MovieIfo = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { movie, loading = true, credits } = useSelector(\r\n    (state) => state.movies\r\n  );\r\n  const { simiMovies } = useSelector((state) => state.simiMovies);\r\n\r\n  const { errors } = useSelector((state) => state.error);\r\n\r\n  console.log(errors, 'E{E}E{E}');\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovie(match.params.movieId));\r\n    dispatch(getCredits(match.params.movieId));\r\n    dispatch(getSimilarMovies(match.params.movieId));\r\n    window.scroll(0, 0);\r\n\r\n    return () => {\r\n      dispatch(clearError());\r\n      console.log('clearing error');\r\n    };\r\n  }, [dispatch, match.params.movieId]);\r\n\r\n  const genres = movie.genres?.map((g) => g.name);\r\n\r\n  if (errors.otherError) {\r\n    return (\r\n      <div className=\"ErrorDiv\">\r\n        <h1>{errors.otherError.message} :</h1>\r\n        <h3>Try:</h3>\r\n        <ul>\r\n          <li>Reloading</li>\r\n          <li>Checking your network</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loadingDiv\">\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let creditInfo = [\r\n    {\r\n      label: 'Language',\r\n      value: `${lang[movie.original_language] || 'Unknown'}`,\r\n    },\r\n    {\r\n      label: 'Rating',\r\n      value: `${movie.vote_average || 'Unknown'}`,\r\n    },\r\n    {\r\n      label: 'Budget',\r\n      value: movie.budget\r\n        ? `$ ${new Intl.NumberFormat('en-IN', {\r\n            maximumSignificantDigits: 3,\r\n          }).format(movie.budget)}`\r\n        : 'Unkown',\r\n    },\r\n    {\r\n      label: 'Revenue',\r\n      value: movie.revenue\r\n        ? `$ ${new Intl.NumberFormat('en-IN', {\r\n            maximumSignificantDigits: 3,\r\n          }).format(movie.revenue)}`\r\n        : 'Unkown',\r\n    },\r\n    { label: 'Release Date', value: movie.release_date },\r\n    { label: 'Status', value: movie.status },\r\n    {\r\n      label: 'Runtime',\r\n      value: `${Math.floor(movie.runtime / 60)} hours - ${\r\n        movie.runtime % 60\r\n      } mins`,\r\n    },\r\n  ];\r\n\r\n  if (movie.title !== movie.original_title) {\r\n    creditInfo = [\r\n      ...creditInfo,\r\n      { label: 'Original Title', value: movie.original_title },\r\n    ];\r\n  }\r\n\r\n  const getCreditInfo = (each) => (\r\n    <li key={Math.random()}>\r\n      <h2>\r\n        {each.label}\r\n        <span className=\"credits__info-values\">{each.value || 'Unknown'}</span>\r\n      </h2>\r\n    </li>\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"movieInfo\">\r\n        <Hero heroMovie={movie} genres={genres} tagline={movie.tagline} />\r\n        <div className=\"outer-div\">\r\n          <div className=\"credits\">\r\n            <div className=\"credits__cast-word\">CAST</div>\r\n            <section className=\"credits__cast\">\r\n              {credits?.map((people) => (\r\n                <Cast\r\n                  profile_path={people.profile_path}\r\n                  name={people.name}\r\n                  character={people.character}\r\n                  id={people.id}\r\n                  key={people.id}\r\n                  gender={people.gender}\r\n                />\r\n              ))}\r\n            </section>\r\n          </div>\r\n\r\n          <div className=\"credits__info\">\r\n            <h2 className=\"credits__info-word\">INFO</h2>\r\n            <ul>{creditInfo.map((each) => getCreditInfo(each))}</ul>\r\n          </div>\r\n\r\n          {simiMovies?.length && (\r\n            <Fragment>\r\n              <div>\r\n                <h2 className=\"credits__similar-word\">Similar Movies</h2>\r\n              </div>\r\n              <div className=\"movies\">\r\n                {simiMovies.map((mov) => (\r\n                  <Movie key={mov.id} movie={mov} />\r\n                ))}\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieIfo;\r\n"],"sourceRoot":""}